$bezier: cubic-bezier(0.75, 0, 0.25, 1);

* {
  margin: 0;
  box-sizing: border-box;
  font-family: HelveticaNeue, Helvetica, sans-serif;
}

.nav {
  color: white;
  &__trigger-finger {
    // The visible part of the trigger, this will be your "nav is closed!"-state
    position: fixed;
    top: 0;
    right: 0;
    z-index: 10;
    display: flex;
    align-items: center;
    width: 15px;
    height: 10px;
    margin: 40px;
    color: rgb(24, 38, 53);
    &::before {
      content: '';
      position: absolute;
      top: -5px;
      left: -5px;
      bottom: -5px;
      right: -5px;
      background: rgb(24, 38, 53);
      opacity: 0;
      z-index: -1;
      transition: opacity 0.3s $bezier;
    }
    span {
      display: block;
      width: 100%;
      height: 2px;
      transition: transform 1s $bezier;
      background: currentColor;
      &::before,
      &::after {
        // Create the hamburger lines
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        display: block; // Labels are inline elements, it needs a display property that allows it it's own set height like block;
        height: 2px;
        background: currentColor; // inherits color set on parent
        transition: transform 0.4s $bezier, top 0.4s 0.4s $bezier, background 0.2s $bezier;
      }
      &::before {
        top: 0;
      }
      &::after {
        top: calc(100% - 2px);
      }
    }
  }
  &__trigger-input, &__submenu-trigger-input {
    // We  want to make the input invisible without using display: none;, because that will remove functionality.
    opacity: 0;
    width: 0;
    height: 0;
    appearance: none;
    position: fixed;
  }
  &__trigger-input {
    &:focus {
      & + label {
        color: white;
        &::before {
          opacity: 1;
        }
      }
    }
    &:checked {
      & + label {
        // change the label if the input is checked, this will be your "nav is open! ðŸŽ‰"-state
        height: 10px;
        color: white;        
        span {
          transform: rotate(45deg);
          &::before, &::after {
            top: calc(50% - 1px);
            transition: transform 0.4s 0.4s $bezier, top 0.4s $bezier, background 0.2s $bezier;
          }
          &::after {
            transform: rotate(90deg);
          }          
        }
      }
      & ~ ul {
        // We use a general sibling because it's less work, + label + ul would work as well
        z-index: 9;
        transform: none;
        transition: 0.5s $bezier;
      }
    }
  }
  &__list {
    // we want to make the top navigation items not visible while the input is not :checked.
    position: fixed;
    overflow-y: scroll;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: -1;
    background: rgb(24, 38, 53);
    font-size: 4rem;
    
    padding: 40px;
    transform: translate(100vw) rotate(45deg);
    transition: 0.2s $bezier;
  }
  &__item {
    list-style: none;
    & + & {
      margin-top: 20px;
    }
  }
  &__submenu-trigger-input {
    &:checked {
      & + label::after {
        transform: translateY(10px);
      }
      & ~ ul {
        display: block;
      }
    }
    &:focus {
      & + label::after {
        transform: translateY(5px);
      }
    }
  }
  &__submenu-trigger-finger {
    &::after {
      content: '';
      display: inline-block;
      border: 10px solid transparent;
      border-top-color: white;
      transition: 0.4s $bezier;
    }
  } 
  &__link {
    text-decoration: none;
    color: inherit;
  }
  &__list-child {
    display: none;
    font-size: 2rem;
    margin-top: 10px;
    padding-left: 2rem;
  }
}

main {
  padding: 2rem 2rem;
  align-items: center;
  h1 {
    font-size: 3rem;
    font-weight: normal;
    span {
      color: rgb(29, 18, 63);
    }
  }  
  p {
    line-height: 1.5;
    margin-top: 1.5rem;
  }
}



// text effect
$t: 1s;
$d: 0.08em;
$n: 3;
$e: cubic-bezier(0.860, 0.000, 0.070, 1.000); 
$front: black;
$back: rgb(150, 169, 231);

.popout{
	font-family: Futura, sans-serif;
	font-weight: 900;
	font-size: 60px;
	padding: 60px;

	@keyframes ani{
		0%{
			transform: translate3d(0,0,0);
			text-shadow: 0em 0em 0 $back;
			color: $front;
		}
		30%{
			transform: translate3d(0,0,0);
			text-shadow: 0em 0em 0 $back;
			color: $front;
		}
		70%{
			transform: translate3d($d,-$d,0);
			text-shadow: -$d $d $back;
			color: $front;
		}
		100%{
			transform: translate3d($d,-$d,0);
			text-shadow: -$d $d $back;
			color: $front;
		}
	}
	span{
		position: relative;
		display: inline-block;
		animation: ani $t infinite alternate $e;
		@for $i from 1 through $n{
			&:nth-last-child(#{$i}n){ animation-delay: -$t*$i/$n/2;}
		}
	}
	
}



// neon button
@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@400;700&display=swap');

.neon{
    position: relative;
    display: inline-block;
    padding: 15px 20px;
    margin: 20px 0;
    color: #646969;
    text-decoration: none;
    text-transform: uppercase;
    transition: 0.5s;
    letter-spacing: 4px;
    overflow: hidden;
    margin-right: 10px;
   
}
.neon:hover{
    background: #666969;
    color: #050801;
    box-shadow: 0 0 5px #777a7b,
                0 0 25px #646969,
                0 0 50px #5a5b5b,
                0 0 200px #03e9f4;
     -webkit-box-reflect:below 1px linear-gradient(transparent, #0005);
}
.neon:nth-child(1){
    filter: hue-rotate(270deg);
}
.neon:nth-child(2){
    filter: hue-rotate(110deg);
}
.neon span{
    position: absolute;
    display: block;
}
.neon span:nth-child(1){
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg,transparent,#03e9f4);
    animation: animate1 1s linear infinite;
}
@keyframes animate1{
    0%{
        left: -100%;
    }
    50%,100%{
        left: 100%;
    }
}
.neon span:nth-child(2){
    top: -100%;
    right: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(180deg,transparent,#03e9f4);
    animation: animate2 1s linear infinite;
    animation-delay: 0.25s;
}
@keyframes animate2{
    0%{
        top: -100%;
    }
    50%,100%{
        top: 100%;
    }
}
.neon span:nth-child(3){
    bottom: 0;
    right: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(270deg,transparent,#03e9f4);
    animation: animate3 1s linear infinite;
    animation-delay: 0.50s;
}
@keyframes animate3{
    0%{
        right: -100%;
    }
    50%,100%{
        right: 100%;
    }
}


.neon span:nth-child(4){
    bottom: -100%;
    left: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(360deg,transparent,#03e9f4);
    animation: animate4 1s linear infinite;
    animation-delay: 0.75s;
}
@keyframes animate4{
    0%{
        bottom: -100%;
    }
    50%,100%{
        bottom: 100%;
    }
}



// SOCIAL LINKS

.social-links {
  transition: 0.2s ease-in-out;
  position: relative;
  list-style: none;
  display: flex;
  height: 100px;
  width: 500px;
}

.social-links:hover > li {
  transform: scale(0.95);
  filter: blur(2px);
}

.social-links li {
  transition: 0.2s ease-in-out;
  border-radius: 10px;
  place-items: center;
  cursor: pointer;
  display: grid;
  margin: auto;
  height: 80px;
  width: 80px;
}

.social-links li:hover {
  filter: blur(0px);
  transform: scale(1);
}

.social-links svg {
  transition: 0.2s ease-in-out;
  pointer-events: none;
  height: 40px;
  width: 40px;
}

.social-links li.google {
  background-color: #ea4335;
}

.social-links li.facebook {
  background-color: #3f51b5;
}

.social-links li.twitter {
  background-color: #03a9f4;
}

.social-links li.yahoo {
  background-color: #410093;
}

.social-links li.windows {
  background-color: #2499ff;
}




